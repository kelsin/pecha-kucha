{"version":3,"file":"reveal.esm.js","sources":["../js/utils/constants.js","../js/utils/util.js","../js/utils/device.js","../node_modules/.pnpm/fitty@2.4.2/node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}","const UA = navigator.userAgent;\nconst testElement = document.createElement( 'div' );\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );\n\n// Flags if we should use zoom instead of transform to scale\n// up slides. Zoom produces crisper results but has a lot of\n// xbrowser quirks so we only use it in whitelisted browsers.\nexport const supportsZoom = 'zoom' in testElement.style && !isMobile &&\n\t\t\t\t( isChrome || /Version\\/[\\d\\.]+.*Safari/.test( UA ) );","/**\n * fitty v2.4.2 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{sync:!1};e.cancelAnimationFrame(l);var n=function(){return s(a.filter((function(e){return e.dirty&&e.active})))};if(t.sync)return n();l=e.requestAnimationFrame(n)}:function(){},c=function(e){return function(t){a.forEach((function(t){return t.dirty=e})),u(t)}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(n){e.dirty=t,e.active&&u(n)}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { HORIZONTAL_SLIDES_SELECTOR, VERTICAL_SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, closest } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\treturn `url(${encodeURI(background.trim())})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tvideo.innerHTML += '<source src=\"'+ source +'\">';\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the given slide,\n\t * if there are any.\n\t */\n\tlayout( slide ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( slide.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.substr( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.substr( 2, 2 ), 16 ),\n\t\t\tb: parseInt( hex6.substr( 4, 2 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n}\n","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Eplicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considerd\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet element;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( element ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( element ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices && ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not avaialble.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.history.replaceState( null, null, '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registed plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all regisered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst doingSlideNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\t// Re-run the slide layout so that r-fit-text is applied based on\n\t\t\t\t// the printed slide size\n\t\t\t\tthis.Reveal.slideContent.layout( slide )\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject slide numbers if `slideNumbers` are enabled\n\t\t\t\tif( doingSlideNumbers ) {\n\t\t\t\t\tconst slideNumber = index + 1;\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing and \n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. As an <aside class=\"notes\"> inside of the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using an <aside class=\"notes\"> element\n\t\tlet notesElement = slide.querySelector( 'aside.notes' );\n\t\tif( notesElement ) {\n\t\t\treturn notesElement.innerHTML;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.2.0';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2021 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tslide.parentNode.removeChild( slide );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', event => {\n\t\t\t\tlet data = event.data;\n\n\t\t\t\t// Make sure we're dealing with JSON\n\t\t\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\t\t\tdata = JSON.parse( data );\n\n\t\t\t\t\t// Check if the requested method can be found\n\t\t\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Zoom Scaling\n\t\t\t\t\t// Content remains crisp no matter how much we scale. Side\n\t\t\t\t\t// effects are minor differences in text layout and iframe\n\t\t\t\t\t// viewports changing size. A 200x200 iframe viewport in a\n\t\t\t\t\t// 2x zoomed presentation ends up having a 400x400 viewport.\n\t\t\t\t\tif( scale > 1 && Device.supportsZoom && window.devicePixelRatio < 2 ) {\n\t\t\t\t\t\tdom.slides.style.zoom = scale;\n\t\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t\t}\n\t\t\t\t\t// Transform Scaling\n\t\t\t\t\t// Content layout remains the exact same when scaled up.\n\t\t\t\t\t// Side effect is content becoming blurred, especially with\n\t\t\t\t\t// high scale values on ldpi screens.\n\t\t\t\t\telse {\n\t\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: config.width,\n\t\t\theight: config.height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before hte slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tfragments.sortAll();\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment' ).forEach( fragment => {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment.visible' ).forEach( fragment => {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// availalbe if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\t// When the slide first appears there is no \"current\" fragment so\n\t\t\t// we look for a data-autoslide timing on the first fragment\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createStyleSheet","tag","document","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","UA","navigator","userAgent","testElement","isMobile","test","platform","maxTouchPoints","isChrome","isAndroid","supportsZoom","e","t","slice","o","l","u","arguments","sync","cancelAnimationFrame","n","s","filter","dirty","active","requestAnimationFrame","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeURI","join","isSpeakerNotes","video","muted","innerHTML","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","url","getHash","formatNumber","delimiter","isNaN","colorToRgb","color","hex3","r","parseInt","charAt","hex6","substr","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","data","backgroundColor","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","getSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","indexh","indexv","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","undefined","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","closeOverlay","Location","writeURLTimeout","onWindowHashChange","getIndicesFromHash","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","replaceState","pathname","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","Date","now","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Print","setupPDF","doingSlideNumbers","pageWidth","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","destroy","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","VERSION","Deck","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","start","Util","wrapper","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","position","overflow","clip","createStatusElement","setupDOM","JSON","parse","method","args","dispatchPostMessage","setInterval","scrollTop","scrollLeft","removeEventListeners","text","nodeType","isAriaHidden","isDisplayHidden","child","isReady","numberOfSlides","viewport","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","parent","self","message","namespace","getState","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","devicePixelRatio","len","remainingHeight","getRemainingHeight","newHeight","oldHeight","removeProperty","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","reverse","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","isVertical","getSlide","indexf","paused","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","anchor","currentTarget","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","setState","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getPlugins","enqueuedAPICalls","deck"],"mappings":"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"}